// Generated by view binder compiler. Do not edit!
package com.zinoview.forcepush.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.viewbinding.ViewBinding;
import com.zinoview.forcepush.R;
import com.zinoview.forcepush.presentation.core.CustomButton;
import com.zinoview.forcepush.presentation.core.CustomProgressBar;
import com.zinoview.forcepush.presentation.core.CustomTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final CustomTextView errorTextView;

  @NonNull
  public final CustomButton loginButton;

  @NonNull
  public final CustomProgressBar progressBar;

  private ActivityLoginBinding(@NonNull LinearLayoutCompat rootView,
      @NonNull CustomTextView errorTextView, @NonNull CustomButton loginButton,
      @NonNull CustomProgressBar progressBar) {
    this.rootView = rootView;
    this.errorTextView = errorTextView;
    this.loginButton = loginButton;
    this.progressBar = progressBar;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.errorTextView;
      CustomTextView errorTextView = rootView.findViewById(id);
      if (errorTextView == null) {
        break missingId;
      }

      id = R.id.loginButton;
      CustomButton loginButton = rootView.findViewById(id);
      if (loginButton == null) {
        break missingId;
      }

      id = R.id.progressBar;
      CustomProgressBar progressBar = rootView.findViewById(id);
      if (progressBar == null) {
        break missingId;
      }

      return new ActivityLoginBinding((LinearLayoutCompat) rootView, errorTextView, loginButton,
          progressBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
